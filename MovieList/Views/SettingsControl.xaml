<UserControl x:Class="MovieList.Views.SettingsControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:hc="https://handyorg.github.io/handycontrol"
             xmlns:controls="clr-namespace:MovieList.Controls"
             xmlns:data="clr-namespace:MovieList.Data"
             xmlns:resx="clr-namespace:MovieList.Properties"
             xmlns:vm="clr-namespace:MovieList.ViewModels" mc:Ignorable="d"
             d:DataContext="{d:DesignInstance vm:SettingsViewModel, IsDesignTimeCreatable=False}"
             d:DesignHeight="800" d:DesignWidth="300" Loaded="SettingsControl_Loaded">
    <UserControl.Resources>
        <Style TargetType="{x:Type StackPanel}">
            <Setter Property="Margin" Value="5,10" />
        </Style>

        <Style TargetType="{x:Type Border}">
            <Setter Property="Background" Value="{DynamicResource SecondaryRegionBrush}" />
        </Style>
        
        <Style x:Key="ColorButton" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="hc:IconElement.Geometry">
                <Setter.Value>
                    <EllipseGeometry Center="0,0" RadiusX="1" RadiusY="1" />
                </Setter.Value>
            </Setter>
            <Setter Property="hc:IconElement.Width" Value="10" />
            <Setter Property="hc:IconElement.Height" Value="10" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
        </Style>

        <Style x:Key="ColorButtonLeft" TargetType="{x:Type Button}" BasedOn="{StaticResource ColorButton}">
            <Setter Property="Margin" Value="0,0,2,5" />
        </Style>

        <Style x:Key="ColorButtonRight" TargetType="{x:Type Button}" BasedOn="{StaticResource ColorButton}">
            <Setter Property="Margin" Value="2,0,0,5" />
        </Style>

        <data:BindingProxy x:Key="ViewModel" Data="{Binding}" />
    </UserControl.Resources>

    <DockPanel Margin="10,0,0,0">
        <TextBlock Text="{x:Static resx:Messages.SettingsTitle}" DockPanel.Dock="Top"
                   Style="{StaticResource TextBlockTitle}" Margin="10" />

        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" DockPanel.Dock="Bottom" Margin="10,5,10,10"
                    Visibility="{Binding CanSaveOrCancelChanges, Converter={StaticResource BoolToVisibility}}">
            <Button Content="{x:Static resx:Messages.Cancel}" Command="{Binding Cancel}" Margin="0,0,10,0" />
            <Button Content="{x:Static resx:Messages.Save}" Command="{Binding Save}" Style="{StaticResource ButtonPrimary}" />
        </StackPanel>

        <ScrollViewer Padding="0,0,10,0">
            <StackPanel>
                <StackPanel.Resources>
                    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource InputTitleTextBlock}">
                        <Setter Property="Foreground" Value="{DynamicResource TextIconBrush}" />
                    </Style>
                </StackPanel.Resources>
                
                <Expander Header="{x:Static resx:Messages.Kinds}">
                    <Border>
                        <StackPanel>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>

                                <Grid.Resources>
                                    <SolidColorBrush x:Key="NotWatched" Color="{Binding NotWatchedColor}" />
                                    <SolidColorBrush x:Key="NotReleased" Color="{Binding NotReleasedColor}" />
                                </Grid.Resources>

                                <Button Name="NotWatchedButton" Content="{x:Static resx:Messages.NotWatched}" Style="{StaticResource ColorButtonLeft}"
                                        Grid.Column="0" Foreground="{DynamicResource NotWatched}" Command="{Binding ChangeNotWatchedColor}"
                                        CommandParameter="{Binding ElementName=NotWatchedButton}" />

                                <Button Name="NotReleasedButton" Content="{x:Static resx:Messages.NotReleased}" Style="{StaticResource ColorButtonRight}"
                                        Grid.Column="1" Foreground="{DynamicResource NotReleased}" Command="{Binding ChangeNotReleasedColor}"
                                        CommandParameter="{Binding ElementName=NotReleasedButton}" />
                            </Grid>

                            <ItemsControl ItemsSource="{Binding Path=Kinds}">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel>
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*" />
                                                    <ColumnDefinition Width="Auto" />
                                                </Grid.ColumnDefinitions>

                                                <controls:TextBox Text="{Binding Path=Name, UpdateSourceTrigger=PropertyChanged}" VerifyFunc="{Binding VerifyName}"
                                                                  Margin="0,5" Grid.Column="0" HorizontalAlignment="Stretch" />

                                                <Button Grid.Column="1" Margin="5,5,0,0" hc:IconElement.Geometry="{StaticResource DeleteGeometry}"
                                                        hc:IconElement.Width="7.5" hc:IconElement.Height="7.5"
                                                        Command="{Binding Path=Data.RemoveKind, Source={StaticResource ViewModel}}"
                                                        CommandParameter="{Binding}" VerticalAlignment="Top" />
                                            </Grid>

                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition />
                                                    <ColumnDefinition />
                                                </Grid.ColumnDefinitions>

                                                <Grid.Resources>
                                                    <SolidColorBrush x:Key="MovieBrush" Color="{Binding ColorForMovie}" />
                                                    <SolidColorBrush x:Key="SeriesBrush" Color="{Binding ColorForSeries}" />
                                                </Grid.Resources>

                                                <Button Name="ChangeColorForMovieButton" Content="{x:Static resx:Messages.Movie}" Grid.Column="0"
                                                        Style="{StaticResource ColorButtonLeft}" Foreground="{DynamicResource MovieBrush}"
                                                        Command="{Binding ChangeColorForMovie}" CommandParameter="{Binding ElementName=ChangeColorForMovieButton}" />

                                                <Button Name="ChangeColorForSeriesButton" Content="{x:Static resx:Messages.Series}" Grid.Column="1"
                                                        Style="{StaticResource ColorButtonRight}" Foreground="{DynamicResource SeriesBrush}"
                                                        Command="{Binding ChangeColorForSeries}" CommandParameter="{Binding ElementName=ChangeColorForSeriesButton}" />
                                            </Grid>
                                        </StackPanel>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>

                            <Button Width="50" Margin="0,5,0,0" hc:IconElement.Geometry="{StaticResource AddGeometry}"
                                    hc:IconElement.Width="10" hc:IconElement.Height="10" Command="{Binding AddKind}" />
                        </StackPanel>
                    </Border>
                </Expander>

                <Expander Header="{x:Static resx:Messages.OtherSettings}">
                    <Border>
                        <StackPanel>
                            <controls:TextBox Text="{Binding Path=DefaultSeasonTitle, UpdateSourceTrigger=PropertyChanged}"
                                              hc:InfoElement.Title="{x:Static resx:Messages.DefaultSeasonTitle}"
                                              VerifyFunc="{Binding VerifyDefaultSeasonTitle}" />

                            <controls:TextBox Text="{Binding Path=DefaultSeasonOriginalTitle, UpdateSourceTrigger=PropertyChanged}"
                                              hc:InfoElement.Title="{x:Static resx:Messages.DefaultSeasonOriginalTitle}"
                                              VerifyFunc="{Binding VerifyDefaultSeasonOriginalTitle}" />
                        </StackPanel>
                    </Border>
                </Expander>

                <Expander Header="{x:Static resx:Messages.AdvancedSettings}">
                    <Border>
                        <StackPanel>
                            <controls:TextBox Text="{Binding Path=DatabasePath, UpdateSourceTrigger=PropertyChanged}"
                                              hc:InfoElement.Title="{x:Static resx:Messages.DatabasePath}"
                                              VerifyFunc="{Binding VerifyDatabasePath}" />

                            <Button Margin="0,5,0,0" Content="{x:Static resx:Messages.ViewLog}" Command="{Binding ViewLog}" />
                        </StackPanel>
                    </Border>
                </Expander>
            </StackPanel>
        </ScrollViewer>
    </DockPanel>
</UserControl>
