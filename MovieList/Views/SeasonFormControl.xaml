<UserControl x:Class="MovieList.Views.SeasonFormControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:hc="https://handyorg.github.io/handycontrol"
             xmlns:controls="clr-namespace:MovieList.Controls"
             xmlns:local="clr-namespace:MovieList.Views"
             xmlns:data="clr-namespace:MovieList.Data"
             xmlns:resx="clr-namespace:MovieList.Properties"
             xmlns:vm="clr-namespace:MovieList.ViewModels"
             xmlns:vmf="clr-namespace:MovieList.ViewModels.FormItems"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" mc:Ignorable="d"
             d:DataContext="{d:DesignInstance vm:SeasonFormViewModel, IsDesignTimeCreatable=False}"
             d:DesignHeight="800" d:DesignWidth="300">
    <UserControl.Resources>
        <data:BindingProxy x:Key="ViewModel" Data="{Binding}" />
    </UserControl.Resources>

    <DockPanel>
        <StackPanel DockPanel.Dock="Top">
            <DockPanel Margin="5,5,10,0">
                <Button Command="{Binding SidePanel.GoUpToSeries}" Style="{StaticResource SidePanelUpButton}" />
                <Button Command="{Binding SidePanel.Close}" Style="{StaticResource SidePanelCloseButton}" />
                
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                    <Button Command="{Binding ParentForm.SelectPreviousComponent}" CommandParameter="{Binding Season}"
                            Style="{StaticResource SidePanelPreviousButton}" />
                    <Button Command="{Binding ParentForm.SelectNextComponent}" CommandParameter="{Binding Season}"
                            Style="{StaticResource SidePanelNextButton}" />
                </StackPanel>
            </DockPanel>

            <TextBlock Text="{Binding FormTitle}" Style="{StaticResource SidePanelTitle}" />
        </StackPanel>

        <StackPanel Visibility="{Binding CanSaveOrCancelChanges, Converter={StaticResource BoolToVisibility}}"
                    Style="{StaticResource SidePanelSaveCancelPanel}">
            <Button Content="{x:Static resx:Messages.Cancel}" Command="{Binding Cancel}" Margin="0,0,10,0" />
            <Button Content="{x:Static resx:Messages.Save}" Command="{Binding Save}" Style="{StaticResource ButtonPrimary}"  />
        </StackPanel>

        <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled" Padding="0,0,10,0">
            <StackPanel DataContext="{Binding Season}" Margin="0,0,0,10">
                <StackPanel.Resources>
                    <data:BindingProxy x:Key="FormItem" Data="{Binding}" />
                </StackPanel.Resources>
                
                <Image Source="{Binding Poster}" Margin="5,0"  />

                <DockPanel Margin="0,5,0,0">
                    <DockPanel.Resources>
                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonPrimary}">
                            <Setter Property="Height" Value="19" />
                            <Setter Property="Width" Value="19" />
                            <Setter Property="Padding" Value="0" />
                            <Setter Property="hc:IconElement.Width" Value="7.5" />
                            <Setter Property="hc:IconElement.Height" Value="7.5" />
                            <Setter Property="Visibility" Value="{Binding
                                        Path=IsEnabled,
                                        RelativeSource={RelativeSource Self},
                                        Converter={StaticResource BoolToVisibilityHidden}}" />
                        </Style>
                    </DockPanel.Resources>

                    <Button DockPanel.Dock="Left" HorizontalAlignment="Left" Command="{Binding Path=ShowPreviousPoster}"
                            hc:IconElement.Geometry="{StaticResource LeftGeometry}" />

                    <Button DockPanel.Dock="Right" HorizontalAlignment="Right" Command="{Binding Path=ShowNextPoster}"
                            hc:IconElement.Geometry="{StaticResource RightGeometry}" />

                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                        <CheckBox x:Name="IsWatchedCheckBox" Content="{x:Static resx:Messages.Watched}" IsChecked="{Binding IsWatched}"
                                  IsEnabled="{Binding Converter={StaticResource CanSelectIfWatched}}" />
                        <CheckBox x:Name="IsNotReleasedCheckBox" Content="{x:Static resx:Messages.NotReleased}" Margin="10,0,0,0"
                                  IsChecked="{Binding Path=IsReleased, Converter={StaticResource InverseBool}}"
                                  IsEnabled="{Binding Converter={StaticResource CanSelectIfReleased}}" />
                    </StackPanel>
                </DockPanel>

                <local:TitleListControl />

                <controls:TextBox Text="{Binding Path=Channel, UpdateSourceTrigger=PropertyChanged}"
                                  hc:InfoElement.Title="{x:Static resx:Messages.Channel}"
                                  Style="{StaticResource InputTextBoxStyle}"
                                  VerifyFunc="{Binding VerifyChannel}" />

                <DockPanel>
                    <TextBlock Text="{x:Static resx:Messages.Periods}" Style="{StaticResource InputTitleTextBlock}" />
                    <Button Command="{Binding AddPeriod}" Style="{StaticResource AddButtonStyle}" />
                </DockPanel>

                <ItemsControl ItemsSource="{Binding Periods}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate DataType="{x:Type vmf:PeriodFormItem}">
                            <StackPanel>
                                <StackPanel.Resources>
                                    <Style TargetType="{x:Type hc:ComboBox}" BasedOn="{StaticResource {x:Type hc:ComboBox}}">
                                        <Setter Property="Grid.Column" Value="0" />
                                        <Setter Property="ItemsSource" Value="{Binding Path=Data.AllMonths, Source={StaticResource FormItem}}" />
                                        <Setter Property="Margin" Value="0,0,2.5,0" />
                                        <Setter Property="hc:InfoElement.TitleAlignment" Value="Left" />
                                        <Setter Property="hc:InfoElement.TitleWidth" Value="85" />
                                        <Setter Property="MaxDropDownHeight" Value="500" />
                                        <Setter Property="VerticalAlignment" Value="Top" />
                                    </Style>
                                </StackPanel.Resources>
                                
                                <Grid Margin="0,0,0,5">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="3*" />
                                        <ColumnDefinition Width="2*" />
                                    </Grid.ColumnDefinitions>

                                    <hc:ComboBox SelectedItem="{Binding Path=StartMonth, UpdateSourceTrigger=PropertyChanged}"
                                                 hc:InfoElement.Title="{Binding StartCaption, UpdateSourceTrigger=PropertyChanged}">
                                        <hc:ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Converter={StaticResource MonthName}}" />
                                            </DataTemplate>
                                        </hc:ComboBox.ItemTemplate>
                                    </hc:ComboBox>

                                    <controls:TextBox Grid.Column="1" Text="{Binding Path=StartYear, UpdateSourceTrigger=PropertyChanged}" Margin="2.5,0,0,0"
                                                      Style="{StaticResource InputTextBoxStyle}" VerifyFunc="{Binding VerifyStartYear}" />
                                </Grid>

                                <Grid Visibility="{Binding Path=IsSingleDayRelease, Converter={StaticResource InverseBoolToVisibility}, UpdateSourceTrigger=PropertyChanged}"
                                      Margin="0,0,0,5">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="3*" />
                                        <ColumnDefinition Width="2*" />
                                    </Grid.ColumnDefinitions>

                                    <hc:ComboBox SelectedItem="{Binding Path=EndMonth, UpdateSourceTrigger=PropertyChanged}"
                                                 hc:InfoElement.Title="{x:Static resx:Messages.End}">
                                        <hc:ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Converter={StaticResource MonthName}}" />
                                            </DataTemplate>
                                        </hc:ComboBox.ItemTemplate>
                                    </hc:ComboBox>

                                    <controls:TextBox Grid.Column="1" Text="{Binding Path=EndYear, UpdateSourceTrigger=PropertyChanged}" Margin="2.5,0,0,0"
                                                      Style="{StaticResource InputTextBoxStyle}" VerifyFunc="{Binding VerifyEndYear}" />
                                </Grid>

                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="3*" />
                                        <ColumnDefinition Width="2*" />
                                    </Grid.ColumnDefinitions>

                                    <controls:TextBox Grid.Column="0" Text="{Binding Path=NumberOfEpisodes, UpdateSourceTrigger=PropertyChanged}"
                                                      Margin="0,0,2.5,0" hc:InfoElement.Title="{x:Static resx:Messages.NumberOfEpisodes}"
                                                      hc:InfoElement.TitleAlignment="Left" hc:InfoElement.TitleWidth="85"
                                                      Style="{StaticResource InputTextBoxStyle}" VerifyFunc="{Binding VerifyNumberOfEpisodes}" />

                                    <CheckBox Grid.Column="1" Content="{x:Static resx:Messages.SingleDayRelease}" Margin="2.5,0,0,0"
                                              IsChecked="{Binding IsSingleDayRelease}" HorizontalAlignment="Left"
                                              IsEnabled="{Binding CanBeSingleDayRelease}" />
                                </Grid>

                                <DockPanel Margin="0,0,0,5">
                                    <Button Command="{Binding Path=Data.RemovePeriod, Source={StaticResource FormItem}}"
                                            CommandParameter="{Binding}" Style="{StaticResource RemoveButtonStyle}" VerticalAlignment="Bottom" />
                                    <controls:TextBox Text="{Binding Path=PosterUrl, UpdateSourceTrigger=PropertyChanged}"
                                                      hc:InfoElement.Title="{x:Static resx:Messages.PosterUrl}"
                                                      Style="{StaticResource UrlInputTextBoxStyle}" VerifyFunc="{Binding VerifyPosterUrl}" />
                                </DockPanel>
                            </StackPanel>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>

                <Button Content="{x:Static resx:Messages.Delete}" Command="{Binding Path=Data.Delete, Source={StaticResource ViewModel}}"
                        Visibility="{Binding Path=IsEnabled, Converter={StaticResource BoolToVisibility}, RelativeSource={RelativeSource Self}}"
                        Style="{StaticResource ButtonDanger}" HorizontalAlignment="Center" Margin="5" />
            </StackPanel>
        </ScrollViewer>
    </DockPanel>
</UserControl>
