<UserControl x:Class="MovieList.Views.MovieListControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:local="clr-namespace:MovieList.Views"
             xmlns:resx="clr-namespace:MovieList.Properties"
             xmlns:vm="clr-namespace:MovieList.ViewModels" mc:Ignorable="d"
             d:DataContext="{d:DesignInstance vm:MovieListViewModel, IsDesignTimeCreatable=False}"
             d:DesignHeight="500" d:DesignWidth="500" Loaded="MovieListControl_Loaded">
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVisibility" />

        <local:BindingProxy x:Key="ViewModel" Data="{Binding}" />
    </UserControl.Resources>

    <DockPanel>
        <TextBlock DockPanel.Dock="Top" Text="{x:Static resx:Messages.Title}" FontSize="36"
                   TextAlignment="Center" HorizontalAlignment="Stretch" Margin="0,5,0,0" />

        <DataGrid x:Name="List" HeadersVisibility="All" AutoGenerateColumns="False" ItemsSource="{Binding Items}">
            <DataGrid.Resources>
                <Style x:Key="TextBlockStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
                    <Setter Property="FontSize" Value="18" />
                    <Setter Property="HorizontalAlignment" Value="Stretch" />
                </Style>

                <Style x:Key="DataGridColumnHeaderDefaultStyle" TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource DataGridColumnHeaderStyle}">
                    <Setter Property="FontSize" Value="18" />
                    <Setter Property="HorizontalAlignment" Value="Center" />
                    <Setter Property="HorizontalContentAlignment" Value="Center" />
                </Style>
            </DataGrid.Resources>

            <b:Interaction.Triggers>
                <b:EventTrigger EventName="SelectionChanged">
                    <b:InvokeCommandAction Command="{Binding SelectItem}" CommandParameter="{Binding Path=SelectedItem, ElementName=List}" />
                </b:EventTrigger>
            </b:Interaction.Triggers>

            <DataGrid.CellStyle>
                <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource DataGridCellStyle}">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    <Setter Property="VerticalContentAlignment" Value="Center" />
                </Style>
            </DataGrid.CellStyle>

            <DataGrid.Columns>
                <DataGridTemplateColumn IsReadOnly="True" Width="50" CanUserResize="False" Header="{x:Static resx:Messages.ListItemNumber}"
                                        HeaderStyle="{StaticResource DataGridColumnHeaderDefaultStyle}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate DataType="{x:Type DataGridCell}">
                            <TextBlock Name="DisplayNumberTextBlock" Text="{Binding DisplayNumber}" Style="{StaticResource TextBlockStyle}" TextAlignment="Left">
                                <TextBlock.Foreground>
                                    <SolidColorBrush Color="{Binding Color}" />
                                </TextBlock.Foreground>
                            </TextBlock>

                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource AncestorType={x:Type DataGridCell}}}"
                                             Value="True">
                                    <Setter Property="Foreground" Value="White" TargetName="DisplayNumberTextBlock" />
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn IsReadOnly="True" Width="*" CanUserResize="False" Header="{x:Static resx:Messages.ListItemTitle}"
                                        HeaderStyle="{StaticResource DataGridColumnHeaderDefaultStyle}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate DataType="{x:Type DataGridCell}">
                            <TextBlock Name="TitleTextBlock" Text="{Binding Title}" Style="{StaticResource TextBlockStyle}" TextAlignment="Center">
                                <TextBlock.Foreground>
                                    <SolidColorBrush Color="{Binding Color}" />
                                </TextBlock.Foreground>
                            </TextBlock>

                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource AncestorType={x:Type DataGridCell}}}"
                                             Value="True">
                                    <Setter Property="Foreground" Value="White" TargetName="TitleTextBlock" />
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn IsReadOnly="True" Width="*" CanUserResize="False" Header="{x:Static resx:Messages.ListItemOriginalTitle}"
                                        HeaderStyle="{StaticResource DataGridColumnHeaderDefaultStyle}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate DataType="{x:Type DataGridCell}">
                            <TextBlock Name="OriginalTitleTextBlock" Text="{Binding OriginalTitle}" Style="{StaticResource TextBlockStyle}" TextAlignment="Center">
                                <TextBlock.Foreground>
                                    <SolidColorBrush Color="{Binding Color}" />
                                </TextBlock.Foreground>
                            </TextBlock>

                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource AncestorType={x:Type DataGridCell}}}"
                                             Value="True">
                                    <Setter Property="Foreground" Value="White" TargetName="OriginalTitleTextBlock" />
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn IsReadOnly="True" Width="100" CanUserResize="False" Header="{x:Static resx:Messages.ListItemYear}"
                                        HeaderStyle="{StaticResource DataGridColumnHeaderDefaultStyle}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate DataType="{x:Type DataGridCell}">
                            <TextBlock Name="YearTextBlock" Text="{Binding Year}" Style="{StaticResource TextBlockStyle}" TextAlignment="Right">
                                <TextBlock.Foreground>
                                    <SolidColorBrush Color="{Binding Color}" />
                                </TextBlock.Foreground>
                            </TextBlock>

                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource AncestorType={x:Type DataGridCell}}}"
                                             Value="True">
                                    <Setter Property="Foreground" Value="White" TargetName="YearTextBlock" />
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
    </DockPanel>
</UserControl>
